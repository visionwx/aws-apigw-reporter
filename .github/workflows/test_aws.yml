name: Testing AWS

on:
    workflow_dispatch:

env:
    AWS_S3_KEY_ID: ${{ secrets.AWS_S3_KEY_ID }}
    AWS_S3_KEY_SECRET: ${{ secrets.AWS_S3_KEY_SECRET }}
    AWS_S3_BUCKET_NAME: boom2-web-statc-test
    AWS_S3_COMPONENT_BUCKET_NAME: trickle-component
    AWS_S3_REGION: us-east-1
    AWS_CLOUD_FRONT_DISTRIBUTION_ID: E28OIAI99C3YGA
    AWS_DEPLOY_KEY: ${{ secrets.AWS_DEPLOY_KEY }}
    AWS_DEPLOY_SECRET: ${{ secrets.AWS_DEPLOY_SECRET }}
    AWS_LAMBDA_FUNCTION_NAME: trickle_ssr_dev
    ECR_REGISTRY: 257417524232.dkr.ecr.us-east-1.amazonaws.com
    IMAGE_NAME: trickle-ssr
    AWS_DEFAULT_REGION: us-east-1
    AWS_LAMBDA_EDGE_FUNCTION_NAME: trickle_edge_dev
    AWS_S3_LAMBDA_PACKAGE_BUCKET_NAME: lambda-package-20220712
    workspaceId: "364397913113100291"
    memberId: "364404407103651845"
    channelId: "364397913113165830"
    trickleId: "578759146069819400"

jobs:
    test_invoke_lambda:
        name: test_invoke_lambda
        runs-on: ubuntu-latest
        steps:
            # Pull Code
            - name: Pull repo
              uses: actions/checkout@v2

            # Configure AWS S3
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ env.AWS_DEPLOY_KEY }}
                  aws-secret-access-key: ${{ env.AWS_DEPLOY_SECRET }}
                  aws-region: ${{ env.AWS_S3_REGION }}
            
            # Send Query Request
            - name: Send query reuqest
              id: query
              run: |
                aws logs start-query \
                  --log-group-name API_GW_LIVE_V1 \
                  --start-time `date -v-1d "+%s"` \
                  --end-time `date "+%s"` \
                  --query-string 'fields @timestamp, @message | stats count() by bin(15m)' > query_request.json
                content=`cat query_request.json`
                content="${content//'%'/'%25'}"
                content="${content//$'\n'/'%0A'}"
                content="${content//$'\r'/'%0D'}"
                echo "::set-output name=queryResult::$content"

            # Get Query Result
            - name: Get query result
              run: |
                echo "${{fromJson(steps.query.outputs.queryResult).queryId}}"
                aws logs get-query-results --query-id ${{fromJson(steps.query.outputs.queryResult).queryId}} > query_result.json
                cat query_result.json